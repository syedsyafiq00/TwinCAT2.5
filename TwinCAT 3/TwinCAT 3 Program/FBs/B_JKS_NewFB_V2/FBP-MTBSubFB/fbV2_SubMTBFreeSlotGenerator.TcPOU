<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fbV2_SubMTBFreeSlotGenerator" Id="{33bcf4d2-b0f0-4a6a-b46b-78a232db015d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fbV2_SubMTBFreeSlotGenerator


(*************************************************************** Ver.B1 - fbV2_SubMTBFreeSlotGenerator - 160704 **************************************************************]

 	- Modify Search value to 20000 from 10000. Because the Add Value when the end block will be greater than 10000.																	
	- 
	- 	
	- 
[****************************************************************************************************************************************************************************************************)



VAR_INPUT
	bReset													: BOOL;
	AR3SiMTBBusyArm_In(*AR3SiMTBArm_In*) 					: ARRAY[1..iArmQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiMTBBusyStn_In(*AR3SiMTBStn_In*) 					: ARRAY[1..iStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiMTBBusyUld_In(*AR3SiMTBUld_In*) 					: ARRAY[1..iUldStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	ARiArmID												: ARRAY [1..iArmQty] OF INT;
	ARiUldStnID												: ARRAY [1..iUldStnQty] OF INT;		(* To Define Unloading Station ID*)


END_VAR


VAR_IN_OUT
	bEn										: BOOL;

	AR3SiSortedMTBFreeArm_Out 				: ARRAY[1..iArmQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiSortedMTBFreeStn_Out 				: ARRAY[1..iStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiSortedMTBFreeUld_Out 				: ARRAY[1..iUldStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	ARiMTBFreeSlotDataQtyArm				: ARRAY[1..iArmQty] OF INT;
	ARiMTBFreeSlotDataQtyStn				: ARRAY[1..iStnQty] OF INT;
	ARiMTBFreeSlotDataQtyUld				: ARRAY[1..iUldStnQty] OF INT;
END_VAR

VAR_OUTPUT
	bMTBEmpty : BOOL;
	bDone : BOOL;

END_VAR
VAR
	(*AR3SiMTBArm_Out*)AR3SiSortedMTBBusyArm(*_In*) 				: ARRAY[1..iArmQty, 1..iMasterBlockQty, 1..3] OF INT;
	(*AR3SiMTBStn_Out*)AR3SiSortedMTBBusyStn(*_In*) 				: ARRAY[1..iStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	(*AR3SiMTBUld_Out*)AR3SiSortedMTBBusyUld(*_In*) 				: ARRAY[1..iUldStnQty, 1..iMasterBlockQty, 1..3] OF INT;

	(*ARiDataQtyArm*)ARiSortedDataQtyArm									: ARRAY[1..iArmQty] OF INT;
	(*ARiDataQtyStn*)ARiSortedDataQtyStn									: ARRAY[1..iStnQty] OF INT;
	(*ARiDataQtyUld*)ARiSortedDataQtyUld									: ARRAY[1..iUldStnQty] OF INT;

(****** From fbV2_MTBConsolidateSorted*)
	bResetRE: R_TRIG;

	bEnRE: R_TRIG;
	bEnFE: F_TRIG;
	iStep: INT;


	AR3SiBufferTimeBlockArm 						: ARRAY[1..iArmQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiBufferTimeBlockStn 						: ARRAY[1..iStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiBufferTimeBlockUld 						: ARRAY[1..iUldStnQty, 1..iMasterBlockQty, 1..3] OF INT;

	AR3SiBufferOrderArm	 						: ARRAY[1..iArmQty, 1..iMasterBlockQty] OF INT;
	AR3SiBufferOrderStn 							: ARRAY[1..iStnQty, 1..iMasterBlockQty] OF INT;
	AR3SiBufferOrderUld 							: ARRAY[1..iUldStnQty, 1..iMasterBlockQty] OF INT;

	AR3SiMTBArmEmpty 				: ARRAY[1..iArmQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiMTBStnEmpty 				: ARRAY[1..iStnQty, 1..iMasterBlockQty, 1..3] OF INT;
	AR3SiMTBUldEmpty 				: ARRAY[1..iUldStnQty, 1..iMasterBlockQty, 1..3] OF INT;

	AR3SiBufferOrderArmEmpty	 				: ARRAY[1..iArmQty, 1..iMasterBlockQty] OF INT;
	AR3SiBufferOrderStnEmpty	 					: ARRAY[1..iStnQty, 1..iMasterBlockQty] OF INT;
	AR3SiBufferOrderUldEmpty	 					: ARRAY[1..iUldStnQty, 1..iMasterBlockQty] OF INT;


	ARiCounterArmEmpty: ARRAY[1..iArmQty] OF INT;
	ARiCounterStnEmpty: ARRAY[1..iStnQty] OF INT;
	ARiCounterUldEmpty: ARRAY[1..iUldStnQty] OF INT;

	iSearchFL: INT;
	iSearchBuffer: INT;
	iSearchBufferAdd: INT;
	iSearchBufferValue: INT;
	iCounter: INT;
	iRunningNo: INT;

	iCheckFL: INT;
	iFreeSlotFL: INT;

	iArmFL: INT;
	iStnFL: INT;
	iUldFL: INT;

	ARiFoundCounterArm: ARRAY[1..iArmQty] OF INT;
	ARiFoundCounterStn: ARRAY[1..iStnQty] OF INT;
	ARiFoundCounterUld: ARRAY[1..iUldStnQty] OF INT;

	ARiScanCounterArm: ARRAY[1..iArmQty] OF INT;
	ARiScanCounterStn: ARRAY[1..iStnQty] OF INT;
	ARiScanCounterUld: ARRAY[1..iUldStnQty] OF INT;


	iGenFL: INT;
	iSkipArm: INT;
	iSkipStn: INT;
	iSkipUld: INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[bResetRE(CLK:=bReset , Q=> );
bEnRE(CLK:=bEn , Q=> );

IF bResetRE.Q THEN
bDone := FALSE;
bMTBEmpty := FALSE;
END_IF

(*
IF NOT bEn THEN
bDone := FALSE;
END_IF
*)


IF NOT bReset AND bEnRE.Q THEN

	bDone := FALSE;
	bMTBEmpty := FALSE;
	iStep := 1;
	AR3SiSortedMTBBusyArm 				:= AR3SiMTBArmEmpty;
	AR3SiSortedMTBBusyStn 				:= AR3SiMTBStnEmpty;
	AR3SiSortedMTBBusyUld 				:= AR3SiMTBUldEmpty;

	AR3SiBufferOrderArm 					:= AR3SiBufferOrderArmEmpty;
	AR3SiBufferOrderStn 					:= AR3SiBufferOrderStnEmpty;
	AR3SiBufferOrderUld 					:= AR3SiBufferOrderUldEmpty;

	AR3SiBufferTimeBlockArm 				:= AR3SiMTBArmEmpty;
	AR3SiBufferTimeBlockStn 				:= AR3SiMTBStnEmpty;
	AR3SiBufferTimeBlockUld 				:= AR3SiMTBUldEmpty;

	ARiSortedDataQtyArm 					:= ARiCounterArmEmpty;
	ARiSortedDataQtyStn 					:= ARiCounterStnEmpty;
	ARiSortedDataQtyUld					:= ARiCounterUldEmpty;

	AR3SiSortedMTBFreeArm_Out 			:= AR3SiMTBArmEmpty;
	AR3SiSortedMTBFreeStn_Out 			:= AR3SiMTBStnEmpty;
	AR3SiSortedMTBFreeUld_Out 			:= AR3SiMTBUldEmpty;



END_IF

CASE iStep OF
0:;

1: (*fbV2_MTBConsolidateSorted - Clear Free Slot*)
	iArmFL := 1;
	FOR iArmFL := 1 TO iArmQty DO
		IF iArmFL >= 1 AND iArmFL <= iArmQty THEN
		iFreeSlotFL := 1;
		ARiSortedDataQtyArm[iArmFL] := 1;
			FOR iFreeSlotFL := 1 TO iMasterBlockQty DO
				IF iFreeSlotFL >= 1 AND iFreeSlotFL <= iMasterBlockQty THEN

					IF AR3SiMTBBusyArm_In[iArmFL, iFreeSlotFL, 2] > 0 THEN
					AR3SiBufferTimeBlockArm[iArmFL, ARiSortedDataQtyArm[iArmFL], 1] := AR3SiMTBBusyArm_In[iArmFL, iFreeSlotFL, 1];
					AR3SiBufferTimeBlockArm[iArmFL, ARiSortedDataQtyArm[iArmFL], 2] := AR3SiMTBBusyArm_In[iArmFL, iFreeSlotFL, 2];
					AR3SiBufferTimeBlockArm[iArmFL, ARiSortedDataQtyArm[iArmFL], 3] := AR3SiMTBBusyArm_In[iArmFL, iFreeSlotFL, 3];
					ARiSortedDataQtyArm[iArmFL] := ARiSortedDataQtyArm[iArmFL] +1;
					END_IF
				END_IF
			END_FOR
		END_IF
	END_FOR


	iStnFL := 1;
	FOR iStnFL := 1 TO iStnQty DO
		IF iStnFL >= 1 AND iStnFL <= iStnQty THEN
		iFreeSlotFL := 1;
		ARiSortedDataQtyStn[iStnFL] := 1;
			FOR iFreeSlotFL := 1 TO iMasterBlockQty DO
				IF iFreeSlotFL >= 1 AND iFreeSlotFL <= iMasterBlockQty THEN

					IF AR3SiMTBBusyStn_In[iStnFL, iFreeSlotFL, 2] > 0 THEN
					AR3SiBufferTimeBlockStn[iStnFL, ARiSortedDataQtyStn[iStnFL], 1] := AR3SiMTBBusyStn_In[iStnFL, iFreeSlotFL, 1];
					AR3SiBufferTimeBlockStn[iStnFL, ARiSortedDataQtyStn[iStnFL], 2] := AR3SiMTBBusyStn_In[iStnFL, iFreeSlotFL, 2];
					AR3SiBufferTimeBlockStn[iStnFL, ARiSortedDataQtyStn[iStnFL], 3] := AR3SiMTBBusyStn_In[iStnFL, iFreeSlotFL, 3];
					ARiSortedDataQtyStn[iStnFL] := ARiSortedDataQtyStn[iStnFL] +1;
					END_IF
				END_IF
			END_FOR
		END_IF
	END_FOR



	iUldFL := 1;
	FOR iUldFL := 1 TO iUldStnQty DO
		IF iUldFL >= 1 AND iUldFL <= iUldStnQty THEN
		iFreeSlotFL := 1;
		ARiSortedDataQtyUld[iUldFL] := 1;
			FOR iFreeSlotFL := 1 TO iMasterBlockQty DO
				IF iFreeSlotFL >= 1 AND iFreeSlotFL <= iMasterBlockQty THEN

					IF AR3SiMTBBusyUld_In[iUldFL, iFreeSlotFL, 2] > 0 THEN
					AR3SiBufferTimeBlockUld[iUldFL, ARiSortedDataQtyUld[iUldFL], 1] := AR3SiMTBBusyUld_In[iUldFL, iFreeSlotFL, 1];
					AR3SiBufferTimeBlockUld[iUldFL, ARiSortedDataQtyUld[iUldFL], 2] := AR3SiMTBBusyUld_In[iUldFL, iFreeSlotFL, 2];
					AR3SiBufferTimeBlockUld[iUldFL, ARiSortedDataQtyUld[iUldFL], 3] := AR3SiMTBBusyUld_In[iUldFL, iFreeSlotFL, 3];
					ARiSortedDataQtyUld[iUldFL] := ARiSortedDataQtyUld[iUldFL] +1;
					END_IF
				END_IF
			END_FOR
		END_IF
	END_FOR



	iArmFL := 1;
	FOR iArmFL := 1 TO iArmQty DO
		IF iArmFL >= 1 AND iArmFL <= iArmQty THEN
			ARiSortedDataQtyArm[iArmFL] := ARiSortedDataQtyArm[iArmFL] -1;
			ARiMTBFreeSlotDataQtyArm[iArmFL] := 0;
		END_IF
	END_FOR

	iStnFL := 1;
	FOR iStnFL := 1 TO iStnQty DO
		IF iStnFL >= 1 AND iStnFL <= iStnQty THEN
			ARiSortedDataQtyStn[iStnFL] := ARiSortedDataQtyStn[iStnFL] -1;
			ARiMTBFreeSlotDataQtyStn[iStnFL] := 0;
		END_IF
	END_FOR

	iUldFL := 1;
	FOR iUldFL := 1 TO iUldStnQty DO
		IF iUldFL >= 1 AND iUldFL <= iUldStnQty THEN
			ARiSortedDataQtyUld[iUldFL] := ARiSortedDataQtyUld[iUldFL] -1;
			ARiMTBFreeSlotDataQtyUld[iUldFL] := 0;
		END_IF
	END_FOR




iArmFL := 1;
iStnFL := 1;
iUldFL := 1;



iStep := 12;



12: (*fbV2_MTBConsolidateSorted - Data Sorting*)

	IF iArmFL <= iArmQty THEN
		ARiScanCounterArm[iArmFL] := 1;
		ARiFoundCounterArm[iArmFL] := 1;

		FOR ARiScanCounterArm[iArmFL] := 1 TO ARiSortedDataQtyArm[iArmFL] DO
			IF ARiScanCounterArm[iArmFL] >= 1 AND ARiScanCounterArm[iArmFL] <= ARiSortedDataQtyArm[iArmFL] THEN

				iSearchFL := 1;
				iSearchBufferValue := 20000;
				iSearchBufferAdd := 0;
					FOR iSearchFL := 1 TO ARiSortedDataQtyArm[iArmFL] DO
						IF iSearchFL >= 1 AND iSearchFL <= ARiSortedDataQtyArm[iArmFL] THEN

							IF AR3SiBufferOrderArm[iArmFL, iSearchFL] = 0 AND AR3SiBufferTimeBlockArm[iArmFL, iSearchFL, 2] > 0 THEN
								IF AR3SiBufferTimeBlockArm[iArmFL, iSearchFL, 2] <= iSearchBufferValue THEN
									iSearchBufferValue		:= AR3SiBufferTimeBlockArm[iArmFL, iSearchFL, 2];
									iSearchBufferAdd			:= iSearchFL;
								END_IF
							END_IF
						END_IF

					END_FOR

					IF iSearchFL > ARiSortedDataQtyArm[iArmFL] AND iSearchBufferAdd > 0 THEN
					AR3SiSortedMTBBusyArm[iArmFL, ARiFoundCounterArm[iArmFL], 1] := AR3SiBufferTimeBlockArm[iArmFL, iSearchBufferAdd, 1];
					AR3SiSortedMTBBusyArm[iArmFL, ARiFoundCounterArm[iArmFL], 2] := AR3SiBufferTimeBlockArm[iArmFL, iSearchBufferAdd, 2];
					AR3SiSortedMTBBusyArm[iArmFL, ARiFoundCounterArm[iArmFL], 3] := AR3SiBufferTimeBlockArm[iArmFL, iSearchBufferAdd, 3];
					AR3SiBufferOrderArm[iArmFL, iSearchBufferAdd] := ARiFoundCounterArm[iArmFL];
					ARiFoundCounterArm[iArmFL] := ARiFoundCounterArm[iArmFL] +1;
					END_IF

			END_IF
		END_FOR
	END_IF



	IF iStnFL <= iStnQty THEN
		ARiScanCounterStn[iStnFL] := 1;
		ARiFoundCounterStn[iStnFL] := 1;

		FOR ARiScanCounterStn[iStnFL] := 1 TO ARiSortedDataQtyStn[iStnFL] DO
			IF ARiScanCounterStn[iStnFL] >= 1 AND ARiScanCounterStn[iStnFL] <= ARiSortedDataQtyStn[iStnFL] THEN

				iSearchFL := 1;
				iSearchBufferValue := 20000;
				iSearchBufferAdd := 0;
					FOR iSearchFL := 1 TO ARiSortedDataQtyStn[iStnFL] DO
						IF iSearchFL >= 1 AND iSearchFL <= ARiSortedDataQtyStn[iStnFL] THEN

							IF AR3SiBufferOrderStn[iStnFL, iSearchFL] = 0 AND AR3SiBufferTimeBlockStn[iStnFL, iSearchFL, 2] > 0 THEN
								IF AR3SiBufferTimeBlockStn[iStnFL, iSearchFL, 2] <= iSearchBufferValue THEN
									iSearchBufferValue		:= AR3SiBufferTimeBlockStn[iStnFL, iSearchFL, 2];
									iSearchBufferAdd			:= iSearchFL;
								END_IF
							END_IF
						END_IF

					END_FOR

					IF iSearchFL > ARiSortedDataQtyStn[iStnFL] AND iSearchBufferAdd > 0 THEN
					AR3SiSortedMTBBusyStn[iStnFL, ARiFoundCounterStn[iStnFL], 1] := AR3SiBufferTimeBlockStn[iStnFL, iSearchBufferAdd, 1];
					AR3SiSortedMTBBusyStn[iStnFL, ARiFoundCounterStn[iStnFL], 2] := AR3SiBufferTimeBlockStn[iStnFL, iSearchBufferAdd, 2];
					AR3SiSortedMTBBusyStn[iStnFL, ARiFoundCounterStn[iStnFL], 3] := AR3SiBufferTimeBlockStn[iStnFL, iSearchBufferAdd, 3];
					AR3SiBufferOrderStn[iStnFL, iSearchBufferAdd] := ARiFoundCounterStn[iStnFL];
					ARiFoundCounterStn[iStnFL] := ARiFoundCounterStn[iStnFL] +1;
					END_IF

			END_IF
		END_FOR
	END_IF



	IF iUldFL <= iUldStnQty THEN
		ARiScanCounterUld[iUldFL] := 1;
		ARiFoundCounterUld[iUldFL] := 1;

		FOR ARiScanCounterUld[iUldFL] := 1 TO ARiSortedDataQtyUld[iUldFL] DO
			IF ARiScanCounterUld[iUldFL] >= 1 AND ARiScanCounterUld[iUldFL] <= ARiSortedDataQtyUld[iUldFL] THEN

				iSearchFL := 1;
				iSearchBufferValue := 20000;
				iSearchBufferAdd := 0;
					FOR iSearchFL := 1 TO ARiSortedDataQtyUld[iUldFL] DO
						IF iSearchFL >= 1 AND iSearchFL <= ARiSortedDataQtyUld[iUldFL] THEN

							IF AR3SiBufferOrderUld[iUldFL, iSearchFL] = 0 AND AR3SiBufferTimeBlockUld[iUldFL, iSearchFL, 2] > 0 THEN
								IF AR3SiBufferTimeBlockUld[iUldFL, iSearchFL, 2] <= iSearchBufferValue THEN
									iSearchBufferValue		:= AR3SiBufferTimeBlockUld[iUldFL, iSearchFL, 2];
									iSearchBufferAdd			:= iSearchFL;
								END_IF
							END_IF
						END_IF

					END_FOR

					IF iSearchFL > ARiSortedDataQtyUld[iUldFL] AND iSearchBufferAdd > 0 THEN
					AR3SiSortedMTBBusyUld[iUldFL, ARiFoundCounterUld[iUldFL], 1] := AR3SiBufferTimeBlockUld[iUldFL, iSearchBufferAdd, 1];
					AR3SiSortedMTBBusyUld[iUldFL, ARiFoundCounterUld[iUldFL], 2] := AR3SiBufferTimeBlockUld[iUldFL, iSearchBufferAdd, 2];
					AR3SiSortedMTBBusyUld[iUldFL, ARiFoundCounterUld[iUldFL], 3] := AR3SiBufferTimeBlockUld[iUldFL, iSearchBufferAdd, 3];
					AR3SiBufferOrderUld[iUldFL, iSearchBufferAdd] := ARiFoundCounterUld[iUldFL];
					ARiFoundCounterUld[iUldFL] := ARiFoundCounterUld[iUldFL] +1;
					END_IF

			END_IF
		END_FOR
	END_IF

iArmFL := iArmFL +1;
iStnFL := iStnFL +1;
iUldFL := iUldFL +1;

IF iArmFL > iArmQty AND iStnFL > iStnQty AND iUldFL > iUldStnQty THEN
iStep := 13;
END_IF

13:(*Generate FreeSlotBlock from Busy Block*)

	iArmFL := 1;
	iStnFL := 1;
	iUldFL := 1;

	FOR iArmFL := 1 TO iArmQty DO
		IF iArmFL >= 1 AND iArmFL <= iArmQty THEN
			iGenFL := 1;
			iSkipArm := 0;
			FOR iGenFL := 1 TO ARiSortedDataQtyArm[iArmFL] DO
				IF iGenFL >= 1 AND iGenFL <= ARiSortedDataQtyArm[iArmFL] THEN

					IF iGenFL = 1 THEN
						IF AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 1] >1(*0*) THEN
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL, 1] := 0;
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL, 2] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 1]-1;
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL, 3] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyArm[iArmFL] := ARiMTBFreeSlotDataQtyArm[iArmFL] +1;
						ELSE
							iSkipArm := 1;
						END_IF
					END_IF

					IF iGenFL >1 THEN
						IF AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 1] >1(*0*) THEN
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL-iSkipArm, 1] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL-1, 2]+1;
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL-iSkipArm, 2] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 1]-1;
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL-iSkipArm, 3] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyArm[iArmFL] := ARiMTBFreeSlotDataQtyArm[iArmFL] +1;
						END_IF
					END_IF

					IF iGenFL =ARiSortedDataQtyArm[iArmFL] THEN
						IF AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 2] >1(*0*) THEN
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL-iSkipArm+1, 1] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 2]+1;
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL-iSkipArm+1, 2] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 2]+1+10000;
							AR3SiSortedMTBFreeArm_Out[iArmFL, iGenFL-iSkipArm+1, 3] := AR3SiSortedMTBBusyArm[iArmFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyArm[iArmFL] := ARiMTBFreeSlotDataQtyArm[iArmFL] +1;
						END_IF
					END_IF
				END_IF
			END_FOR
		END_IF
	END_FOR


	FOR iStnFL := 1 TO iStnQty DO
		IF iStnFL >= 1 AND iStnFL <= iStnQty THEN
			iGenFL := 1;
			iSkipStn := 0;
			FOR iGenFL := 1 TO ARiSortedDataQtyStn[iStnFL] DO
				IF iGenFL >= 1 AND iGenFL <= ARiSortedDataQtyStn[iStnFL] THEN

					IF iGenFL = 1 THEN
						IF AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 1] >1(*0*) THEN
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL, 1] := 0;
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL, 2] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 1]-1;
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL, 3] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyStn[iStnFL] := ARiMTBFreeSlotDataQtyStn[iStnFL] +1;
						ELSE
							iSkipStn := 1;
						END_IF
					END_IF

					IF iGenFL >1 THEN
						IF AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 1] >1(*0*) THEN
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL-iSkipStn, 1] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL-1, 2]+1;
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL-iSkipStn, 2] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 1]-1;
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL-iSkipStn, 3] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyStn[iStnFL] := ARiMTBFreeSlotDataQtyStn[iStnFL] +1;
						END_IF
					END_IF

					IF iGenFL =ARiSortedDataQtyStn[iStnFL] THEN
						IF AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 2] >1(*0*) THEN
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL-iSkipStn+1, 1] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 2]+1;
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL-iSkipStn+1, 2] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 2]+1+10000;
							AR3SiSortedMTBFreeStn_Out[iStnFL, iGenFL-iSkipStn+1, 3] := AR3SiSortedMTBBusyStn[iStnFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyStn[iStnFL] := ARiMTBFreeSlotDataQtyStn[iStnFL] +1;
						END_IF
					END_IF
				END_IF
			END_FOR
		END_IF
	END_FOR



	FOR iUldFL := 1 TO iUldStnQty DO
		IF iUldFL >= 1 AND iUldFL <= iUldStnQty THEN
			iGenFL := 1;
			iSkipUld := 0;
			FOR iGenFL := 1 TO ARiSortedDataQtyUld[iUldFL] DO
				IF iGenFL >= 1 AND iGenFL <= ARiSortedDataQtyUld[iUldFL] THEN

					IF iGenFL = 1 THEN
						IF AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 1] >1(*0*) THEN
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL, 1] := 0;
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL, 2] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 1]-1;
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL, 3] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyUld[iUldFL] := ARiMTBFreeSlotDataQtyUld[iUldFL] +1;
						ELSE
							iSkipUld := 1;
						END_IF
					END_IF

					IF iGenFL >1 THEN
						IF AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 1] >1(*0*) THEN
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL-iSkipUld, 1] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL-1, 2]+1;
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL-iSkipUld, 2] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 1]-1;
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL-iSkipUld, 3] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyUld[iUldFL] := ARiMTBFreeSlotDataQtyUld[iUldFL] +1;
						END_IF
					END_IF

					IF iGenFL =ARiSortedDataQtyUld[iUldFL] THEN
						IF AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 2] >1(*0*) THEN
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL-iSkipUld+1, 1] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 2]+1;
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL-iSkipUld+1, 2] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 2]+1+10000;
							AR3SiSortedMTBFreeUld_Out[iUldFL, iGenFL-iSkipUld+1, 3] := AR3SiSortedMTBBusyUld[iUldFL, iGenFL, 3];
							ARiMTBFreeSlotDataQtyUld[iUldFL] := ARiMTBFreeSlotDataQtyUld[iUldFL] +1;
						END_IF
					END_IF
				END_IF
			END_FOR
		END_IF
	END_FOR




iStep:= 14;

14: (* Put Remark for those "0" = "Empty" Stn *) (*Generate FreeSlotBlock for Empty Stn Block*)

bMTBEmpty := TRUE;

	iArmFL := 1;
	FOR iArmFL := 1 TO iArmQty DO
		IF iArmFL >= 1 AND iArmFL <= iArmQty THEN

			IF ARiMTBFreeSlotDataQtyArm[iArmFL] > 0 THEN
				bMTBEmpty := FALSE;
			END_IF

			IF ARiMTBFreeSlotDataQtyArm[iArmFL] = 0 THEN
				AR3SiSortedMTBFreeArm_Out[iArmFL, 1, 1] := 0;
				AR3SiSortedMTBFreeArm_Out[iArmFL, 1, 2] := 10000;
				AR3SiSortedMTBFreeArm_Out[iArmFL, 1, 3] := ARiArmID[iArmFL];
				ARiMTBFreeSlotDataQtyArm[iArmFL] := 1;
			END_IF
		END_IF
	END_FOR


	iStnFL := 1;
	FOR iStnFL := 1 TO iStnQty DO
		IF iStnFL >= 1 AND iStnFL <= iStnQty THEN

			IF ARiMTBFreeSlotDataQtyStn[iStnFL] > 0 THEN
				bMTBEmpty := FALSE;
			END_IF

			IF ARiMTBFreeSlotDataQtyStn[iStnFL] = 0 THEN
				AR3SiSortedMTBFreeStn_Out[iStnFL, 1, 1] := 0;
				AR3SiSortedMTBFreeStn_Out[iStnFL, 1, 2] := 10000;
				AR3SiSortedMTBFreeStn_Out[iStnFL, 1, 3] := iStnFL;
				ARiMTBFreeSlotDataQtyStn[iStnFL] := 1;
			END_IF
		END_IF
	END_FOR


	iUldFL := 1;
	FOR iUldFL := 1 TO iUldStnQty DO
		IF iUldFL >= 1 AND iUldFL <= iUldStnQty THEN

			IF ARiMTBFreeSlotDataQtyUld[iUldFL] > 0 THEN
				bMTBEmpty := FALSE;
			END_IF

			IF ARiMTBFreeSlotDataQtyUld[iUldFL] = 0 THEN
				AR3SiSortedMTBFreeUld_Out[iUldFL, 1, 1] := 0;
				AR3SiSortedMTBFreeUld_Out[iUldFL, 1, 2] := 10000;
				AR3SiSortedMTBFreeUld_Out[iUldFL, 1, 3] := ARiUldStnID[iUldFL];
				ARiMTBFreeSlotDataQtyUld[iUldFL] := 1;
			END_IF
		END_IF
	END_FOR

iStep := 20;


20: (* Search Completed*)
bDone := TRUE;
bEn := FALSE;


END_CASE]]></ST>
    </Implementation>
    <LineIds Name="fbV2_SubMTBFreeSlotGenerator">
      <LineId Id="107" Count="465" />
    </LineIds>
  </POU>
</TcPlcObject>