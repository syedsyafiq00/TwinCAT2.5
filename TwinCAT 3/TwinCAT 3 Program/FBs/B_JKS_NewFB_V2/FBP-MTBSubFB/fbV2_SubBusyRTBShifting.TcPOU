<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fbV2_SubBusyRTBShifting" Id="{b290f44d-8b17-4231-b691-38f71c055714}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fbV2_SubBusyRTBShifting
VAR_INPUT
	ARiArmID: ARRAY [1..iArmQty] OF INT;
	iRTBTotalBlockQty						: INT;

END_VAR
VAR_IN_OUT

	bEn										: BOOL;
	iShiftValue								: INT;
	iCurrentRecipeBlockNo					: INT;
	AR2SiRecipeTimeBlockWithCallArmTime 	: ARRAY[1..iRecipeBlockQty, 1..9] OF INT;
(*	iPrevious2RecipeBusyBlockStart 			: INT;	(*RD1*)		(*Array "1"*)
	iPrevious2RecipeBusyBlockEnd 			: INT;	(*RD2*)		(*Array "2"*)
	iPrevious2RecipeBusyStnID	 			: INT;	(*RD2*)		(*Array "3"*)
	iPrevious1RecipeBusyBlockStart 			: INT;	(*RD1*)		(*Array "1"*)
	iPrevious1RecipeBusyBlockEnd 			: INT;	(*RD2*)		(*Array "2"*)
	iPrevious1RecipeBusyStnID	 			: INT;	(*RD2*)		(*Array "3"*)
	iCurrentRecipeBusyBlockStart 				: INT;	(*RD1*)		(*Array "1"*)
	iCurrentRecipeBusyBlockEnd 				: INT;	(*RD2*)		(*Array "2"*)
	iCurrentRecipeBusyStnID	 				: INT;	(*RD2*)		(*Array "3"*)
*)
END_VAR

VAR_OUTPUT

	bArmIDFound							: BOOL;
	bDone								: BOOL;
	iPreviousShiftValue					: INT;


END_VAR
VAR

	bEnFE: F_TRIG;

	bResetRE: R_TRIG;
	iCheckArmIDFL: INT;
	iRTBShiftFL: INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bEn THEN
bDone := FALSE;
END_IF



IF bEn THEN
bDone := FALSE;
bArmIDFound := FALSE;

	(*Check ArmID*)
	iCheckArmIDFL := 1;
	IF iCheckArmIDFL>0 AND iCheckArmIDFL < iArmQty+1 THEN
		FOR iCheckArmIDFL := 1 TO iArmQty DO
			IF AR2SiRecipeTimeBlockWithCallArmTime[iCurrentRecipeBlockNo,3] = ARiArmID[iCheckArmIDFL] THEN
			bArmIDFound := TRUE;
			iCheckArmIDFL := iArmQty+1;
			END_IF
		END_FOR
	END_IF

	IF iCurrentRecipeBlockNo >=3 THEN

		iRTBShiftFL := iCurrentRecipeBlockNo;

		FOR iRTBShiftFL := iCurrentRecipeBlockNo TO iRTBTotalBlockQty DO
			IF iRTBShiftFL >= iCurrentRecipeBlockNo AND iRTBShiftFL <= iRTBTotalBlockQty THEN

				IF iRTBShiftFL = iCurrentRecipeBlockNo THEN

					(*If Current is Arm, Means Previous is Station, Shifting on Arm only affect the extension of Previous Station*)
					IF bArmIDFound THEN
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,1] 		:= 	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,1];
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,2] 		:= 	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,2] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,3]	 	:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,3];
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,1] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,1] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,2] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,2] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,3]		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,3];
				
				
					(*If Current is not Arm Meant its Station. Shifting on Previous 1 = Arm (Both Start and End), Also Previous2 = PreviousStation extension*)
					ELSIF AR2SiRecipeTimeBlockWithCallArmTime[iCurrentRecipeBlockNo,3] > 0  THEN
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-2,1] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-2,1];
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-2,2] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-2,2] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-2,3]	 	:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-2,3];
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,1] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,1] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,2] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,2] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,3]		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL-1,3];
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,1] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,1] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,2] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,2] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,3]		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,3];
					END_IF

				ELSE

					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,1] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,1] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,2] 		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,2] + iShiftValue;
					AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,3]		:=	AR2SiRecipeTimeBlockWithCallArmTime[iRTBShiftFL,3];
				END_IF
			END_IF
		END_FOR
	END_IF

bDone := TRUE;
bEn := FALSE;
iPreviousShiftValue := iShiftValue;
iShiftValue := 0;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="fbV2_SubBusyRTBShifting">
      <LineId Id="40" Count="67" />
    </LineIds>
  </POU>
</TcPlcObject>