<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Csv_Report_Ctrl" Id="{f5f67c39-37b0-4e4e-ae60-cd3f622f7a02}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Csv_Report_Ctrl
VAR
	bEn	:	BOOL;
	bReset : BOOL;
	
	bIdleFlag : BOOL;
	bProgressFlag : BOOL;
	
	bErrorFlag : BOOL;
	iErrorCaseId : INT;
	bClearErrorLog : BOOL;
	
	bError			: BOOL;
	

	tReportCsvEn_Ld: TON;
	bReportCsvWriteRE_Ld: R_TRIG;
	bErrorCsvLd			: BOOL;
	
	tReportCsvEn_Stn: ARRAY [1..iStnQty] OF TON;	
	bReportCsvWriteRE_Stn: ARRAY [1..iStnQty] OF R_TRIG;
	bErrorCsvStn		: ARRAY [1..13] OF BOOL;
	
	tReportCsvEn_Uld: TON;
	bReportCsvWriteRE_Uld: R_TRIG;
	bErrorCsvUld			: BOOL;
	
	CKKTEST: ARRAY [1..13] OF BOOL;
	sReportName : STRING;
	
	bUsFreqChange: ARRAY [1..iStnQty] OF R_TRIG;
	
	tLd			: TON;
	tStn1		: TON;
	tStn2		: TON;
	tStn3		: TON;
	tStn4		: TON;
	tStn5		: TON;
	tStn6		: TON;
	tStn7		: TON;
	tStn8		: TON;
	tStn9		: TON;
	tStn10		: TON;
	tStn11		: TON;
	tStn12		: TON;
	tStn13		: TON;
	bCsvShutdownRequestFlag: BOOL;
	bCsvReadyToShutdownFlag: BOOL;
	R_TRIG1: R_TRIG;
	test13: BOOL;
	start: BOOL;
	sPath: STRING(255);
	sPath1: STRING(255);
	
		fbFileRename    : FB_FileRename;
		sNetId          : T_AmsNetId;
        sOldName        : T_MaxString;
        sNewName        : T_MaxString;
        ePath           : E_OpenPath := PATH_GENERIC;          (* Default: generic file path*)
        bExecute        : BOOL;
        tTimeout        : TIME;
	bRename: BOOL;
	bReportCsvWriteLdHolding: BOOL;
	tReportCsvWriteLdHolding: TON;
	ARbReportCsvWriteStnHolding : ARRAY [1..iStnQty] OF BOOL;
	ARtReportCsvWriteStnHolding : ARRAY [1..iStnQty] OF TON;
	bReportCsvWriteUldHolding: BOOL;
	tReportCsvWriteUldHolding: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//tReportCsvEn_Ld	    (IN:=dsMcCarrierInfo.ARLd[1].bAvailability , PT:=T#2S ,Q=> , ET=> );
//tReportCsvEn_Stn[1]	(IN:=dsMcCarrierInfo.ARStn[1].iEstTotalProcessTimeEV > 0 AND dsMcCarrierInfo.ARStn[1].iEstTotalProcessTimeEV < 15 , PT:=T#1S ,Q=> , ET=> );
//tReportCsvEn_Stn[2]	(IN:=dsMcCarrierInfo.ARStn[2].iEstTotalProcessTimeEV > 0 AND dsMcCarrierInfo.ARStn[2].iEstTotalProcessTimeEV < 15 , PT:=T#1S ,Q=> , ET=> );
//tReportCsvEn_Stn[3]	(IN:=dsMcCarrierInfo.ARStn[3].iEstTotalProcessTimeEV > 0 AND dsMcCarrierInfo.ARStn[3].iEstTotalProcessTimeEV < 15 , PT:=T#1S ,Q=> , ET=> );
//tReportCsvEn_Stn[4]	(IN:=dsMcCarrierInfo.ARStn[4].iEstTotalProcessTimeEV > 0 AND dsMcCarrierInfo.ARStn[4].iEstTotalProcessTimeEV < 15 , PT:=T#1S ,Q=> , ET=> );
//tReportCsvEn_Stn[5]	(IN:=dsMcCarrierInfo.ARStn[5].iEstTotalProcessTimeEV > 0 AND dsMcCarrierInfo.ARStn[5].iEstTotalProcessTimeEV < 15 , PT:=T#1S ,Q=> , ET=> );
//tReportCsvEn_Uld	(IN:=dsMcCarrierInfo.ARUld[1].bAvailability , PT:=T#1S ,Q=> , ET=> );

tLD(IN:=AR2sDSCv_LdConfirmBasketInfo[1,4].bAvailibility , PT:=T#1S , Q=> , ET=> );
tStn1(IN:=ARDsStnSeqProcessCtrl[1].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[1].Out_iTotalProcessTimeEV <10 , PT:=T#1S , Q=> , ET=> );
tStn2(IN:=ARDsStnSeqProcessCtrl[2].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[2].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn3(IN:=ARDsStnSeqProcessCtrl[3].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[3].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn4(IN:=ARDsStnSeqProcessCtrl[4].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[4].Out_iTotalProcessTimeEV <10  , PT:=T#1s , Q=> , ET=> );
tStn5(IN:=ARDsStnSeqProcessCtrl[5].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[5].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn6(IN:=ARDsStnSeqProcessCtrl[6].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[6].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn7(IN:=ARDsStnSeqProcessCtrl[7].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[7].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn8(IN:=ARDsStnSeqProcessCtrl[8].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[8].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn9(IN:=ARDsStnSeqProcessCtrl[9].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[9].Out_iTotalProcessTimeEV <10 , PT:=T#1s, Q=> , ET=> );
tStn10(IN:=ARDsStnSeqProcessCtrl[10].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[10].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn11(IN:=ARDsStnSeqProcessCtrl[11].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[11].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn12(IN:=ARDsStnSeqProcessCtrl[12].Out_iTotalProcessTimeEV >0 AND ARDsStnSeqProcessCtrl[12].Out_iTotalProcessTimeEV <10 , PT:=T#1s , Q=> , ET=> );
tStn13(IN:=AR2sDSCv_UldConfirmBasketInfo[1,1].bAvailibility  , PT:=T#1S , Q=> , ET=> );


bUsFreqChange[1](CLK:=ARbDO[eY10001_Stn01UltrasonicGeneratorFrequencyChange]  , Q=> );
bUsFreqChange[2](CLK:=ARbDO[eY10002_Stn02UltrasonicGeneratorFrequencyChange]  , Q=> );
bUsFreqChange[4](CLK:=ARbDO[eY10003_Stn04UltrasonicGeneratorFrequencyChange]  , Q=> );
bUsFreqChange[5](CLK:=ARbDO[eY10004_Stn05UltrasonicGeneratorFrequencyChange]  , Q=> );
bUsFreqChange[7](CLK:=ARbDO[eY10005_Stn07UltrasonicGeneratorFrequencyChange]  , Q=> );
bUsFreqChange[8](CLK:=ARbDO[eY10006_Stn08UltrasonicGeneratorFrequencyChange]  , Q=> );



sLdtittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sLdtittle := CONCAT(AR2sDSCv_LdConfirmBasketInfo[1,4].ARsBarcodeData[1],sLdtittle);
sLdtittle := CONCAT('-',sLdtittle);
sLdtittle := CONCAT(AR2sDSCv_LdConfirmBasketInfo[1,4].ARsBarcodeData[2],sLdtittle);
sLdtittle := CONCAT('-',sLdtittle);
sLdtittle := CONCAT(AR2sDSCv_LdConfirmBasketInfo[1,4].ARsBarcodeData[3],sLdtittle);
sLdtittle := CONCAT('-',sLdtittle);
sLdtittle := CONCAT(AR2sDSCv_LdConfirmBasketInfo[1,4].sReservedInt,sLdtittle);

tReportCsvWriteLdHolding(IN:=bReportCsvWriteLdHolding , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Ld.Q THEN bReportCsvWriteLdHolding := TRUE; END_IF
IF tReportCsvWriteLdHolding.Q THEN	bReportCsvWriteLdHolding := FALSE; END_IF

// Loading pick
bReportCsvWriteRE_Ld (CLK:=tLD.Q OR CKKTEST[1] , Q=> );

IF bReportCsvWriteRE_Ld.Q  THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	79 , 
						sFilename				:=	sLdtittle , 
						eCsvActionType			:=	eCsvNewFile_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvLd );
END_IF


sStn1tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn1tittle := CONCAT(DSStnBasketInfo[1].ARsBarcodeData[1],sStn1tittle);
sStn1tittle := CONCAT('-',sStn1tittle);
sStn1tittle := CONCAT(DSStnBasketInfo[1].ARsBarcodeData[2],sStn1tittle);
sStn1tittle := CONCAT('-',sStn1tittle);
sStn1tittle := CONCAT(DSStnBasketInfo[1].ARsBarcodeData[3],sStn1tittle);
sStn1tittle := CONCAT('-',sStn1tittle);
sStn1tittle := CONCAT(DSStnBasketInfo[1].sReservedInt,sStn1tittle);

ARtReportCsvWriteStnHolding[1](IN:=ARbReportCsvWriteStnHolding[1] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[1].Q 		THEN 	ARbReportCsvWriteStnHolding[1] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[1].Q THEN	ARbReportCsvWriteStnHolding[1] := FALSE; END_IF

// Station 1
bReportCsvWriteRE_Stn[1] (CLK:=tStn1.Q OR GeneratorComparison.ARUpdate_bIntAddress[1] OR CKKTEST[2]    , Q=> );

IF  bReportCsvWriteRE_Stn[1].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	1 , 
						sFilename				:=	sStn1tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[1] );
END_IF


sStn2tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn2tittle := CONCAT(DSStnBasketInfo[2].ARsBarcodeData[1],sStn2tittle);
sStn2tittle := CONCAT('-',sStn2tittle);
sStn2tittle := CONCAT(DSStnBasketInfo[2].ARsBarcodeData[2],sStn2tittle);
sStn2tittle := CONCAT('-',sStn2tittle);
sStn2tittle := CONCAT(DSStnBasketInfo[2].ARsBarcodeData[3],sStn2tittle);
sStn2tittle := CONCAT('-',sStn2tittle);
sStn2tittle := CONCAT(DSStnBasketInfo[2].sReservedInt,sStn2tittle);

ARtReportCsvWriteStnHolding[2](IN:=ARbReportCsvWriteStnHolding[2] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[2].Q 		THEN 	ARbReportCsvWriteStnHolding[2] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[2].Q THEN	ARbReportCsvWriteStnHolding[2] := FALSE; END_IF

// Station 2
bReportCsvWriteRE_Stn[2] (CLK:=tStn2.Q OR GeneratorComparison.ARUpdate_bIntAddress[2] OR CKKTEST[3]  , Q=> );

IF  bReportCsvWriteRE_Stn[2].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	2 , 
						sFilename				:=	sStn2tittle , 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[2] );
END_IF


sStn3tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn3tittle := CONCAT(DSStnBasketInfo[3].ARsBarcodeData[1],sStn3tittle);
sStn3tittle := CONCAT('-',sStn3tittle);
sStn3tittle := CONCAT(DSStnBasketInfo[3].ARsBarcodeData[2],sStn3tittle);
sStn3tittle := CONCAT('-',sStn3tittle);
sStn3tittle := CONCAT(DSStnBasketInfo[3].ARsBarcodeData[3],sStn3tittle);
sStn3tittle := CONCAT('-',sStn3tittle);
sStn3tittle := CONCAT(DSStnBasketInfo[3].sReservedInt,sStn3tittle);

ARtReportCsvWriteStnHolding[3](IN:=ARbReportCsvWriteStnHolding[3] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[3].Q 		THEN 	ARbReportCsvWriteStnHolding[3] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[3].Q THEN	ARbReportCsvWriteStnHolding[3] := FALSE; END_IF

// Station 3
bReportCsvWriteRE_Stn[3] (CLK:=tStn3.Q OR GeneratorComparison.ARUpdate_bIntAddress[3] OR CKKTEST[4]  , Q=> );

IF  bReportCsvWriteRE_Stn[3].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	3 , 
						sFilename				:=	sStn3tittle , 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[3] );
END_IF


sStn4tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn4tittle := CONCAT(DSStnBasketInfo[4].ARsBarcodeData[1],sStn4tittle);
sStn4tittle := CONCAT('-',sStn4tittle);
sStn4tittle := CONCAT(DSStnBasketInfo[4].ARsBarcodeData[2],sStn4tittle);
sStn4tittle := CONCAT('-',sStn4tittle);
sStn4tittle := CONCAT(DSStnBasketInfo[4].ARsBarcodeData[3],sStn4tittle);
sStn4tittle := CONCAT('-',sStn4tittle);
sStn4tittle := CONCAT(DSStnBasketInfo[4].sReservedInt,sStn4tittle);

ARtReportCsvWriteStnHolding[4](IN:=ARbReportCsvWriteStnHolding[4] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[4].Q 		THEN 	ARbReportCsvWriteStnHolding[4] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[4].Q THEN	ARbReportCsvWriteStnHolding[4] := FALSE; END_IF

// Station 4
bReportCsvWriteRE_Stn[4] (CLK:=tStn4.Q OR GeneratorComparison.ARUpdate_bIntAddress[4] OR CKKTEST[5]  , Q=> );

IF  bReportCsvWriteRE_Stn[4].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	4 , 
						sFilename				:=	sStn4tittle , 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[4] );
END_IF


sStn5tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn5tittle := CONCAT(DSStnBasketInfo[5].ARsBarcodeData[1],sStn5tittle);
sStn5tittle := CONCAT('-',sStn5tittle);
sStn5tittle := CONCAT(DSStnBasketInfo[5].ARsBarcodeData[2],sStn5tittle);
sStn5tittle := CONCAT('-',sStn5tittle);
sStn5tittle := CONCAT(DSStnBasketInfo[5].ARsBarcodeData[3],sStn5tittle);
sStn5tittle := CONCAT('-',sStn5tittle);
sStn5tittle := CONCAT(DSStnBasketInfo[5].sReservedInt,sStn5tittle);

ARtReportCsvWriteStnHolding[5](IN:=ARbReportCsvWriteStnHolding[5] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[5].Q 		THEN 	ARbReportCsvWriteStnHolding[5] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[5].Q THEN	ARbReportCsvWriteStnHolding[5] := FALSE; END_IF

// Station 5
bReportCsvWriteRE_Stn[5] (CLK:=tStn5.Q OR GeneratorComparison.ARUpdate_bIntAddress[5] OR CKKTEST[6]  , Q=> );

IF  bReportCsvWriteRE_Stn[5].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	5 , 
						sFilename				:=	sStn5tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[5] );
END_IF


sStn6tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn6tittle := CONCAT(DSStnBasketInfo[6].ARsBarcodeData[1],sStn6tittle);
sStn6tittle := CONCAT('-',sStn6tittle);
sStn6tittle := CONCAT(DSStnBasketInfo[6].ARsBarcodeData[2],sStn6tittle);
sStn6tittle := CONCAT('-',sStn6tittle);
sStn6tittle := CONCAT(DSStnBasketInfo[6].ARsBarcodeData[3],sStn6tittle);
sStn6tittle := CONCAT('-',sStn6tittle);
sStn6tittle := CONCAT(DSStnBasketInfo[6].sReservedInt,sStn6tittle);

ARtReportCsvWriteStnHolding[6](IN:=ARbReportCsvWriteStnHolding[6] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[6].Q 		THEN 	ARbReportCsvWriteStnHolding[6] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[6].Q THEN	ARbReportCsvWriteStnHolding[6] := FALSE; END_IF

// Station 6
bReportCsvWriteRE_Stn[6] (CLK:=tStn6.Q OR GeneratorComparison.ARUpdate_bIntAddress[6] OR CKKTEST[7]  , Q=> );

IF bReportCsvWriteRE_Stn[6].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	6 , 
						sFilename				:=	sStn6tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[6] );
END_IF


sStn7tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn7tittle := CONCAT(DSStnBasketInfo[7].ARsBarcodeData[1],sStn7tittle);
sStn7tittle := CONCAT('-',sStn7tittle);
sStn7tittle := CONCAT(DSStnBasketInfo[7].ARsBarcodeData[2],sStn7tittle);
sStn7tittle := CONCAT('-',sStn7tittle);
sStn7tittle := CONCAT(DSStnBasketInfo[7].ARsBarcodeData[3],sStn7tittle);
sStn7tittle := CONCAT('-',sStn7tittle);
sStn7tittle := CONCAT(DSStnBasketInfo[7].sReservedInt,sStn7tittle);

ARtReportCsvWriteStnHolding[7](IN:=ARbReportCsvWriteStnHolding[7] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[7].Q 		THEN 	ARbReportCsvWriteStnHolding[7] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[7].Q THEN	ARbReportCsvWriteStnHolding[7] := FALSE; END_IF

// Station 7
bReportCsvWriteRE_Stn[7] (CLK:=tStn7.Q OR GeneratorComparison.ARUpdate_bIntAddress[7] OR CKKTEST[8]  , Q=> );

IF  bReportCsvWriteRE_Stn[7].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	7 , 
						sFilename				:=	sStn7tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[7] );
END_IF


sStn8tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn8tittle := CONCAT(DSStnBasketInfo[8].ARsBarcodeData[1],sStn8tittle);
sStn8tittle := CONCAT('-',sStn8tittle);
sStn8tittle := CONCAT(DSStnBasketInfo[8].ARsBarcodeData[2],sStn8tittle);
sStn8tittle := CONCAT('-',sStn8tittle);
sStn8tittle := CONCAT(DSStnBasketInfo[8].ARsBarcodeData[3],sStn8tittle);
sStn8tittle := CONCAT('-',sStn8tittle);
sStn8tittle := CONCAT(DSStnBasketInfo[8].sReservedInt,sStn8tittle);

ARtReportCsvWriteStnHolding[8](IN:=ARbReportCsvWriteStnHolding[8] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[8].Q 		THEN 	ARbReportCsvWriteStnHolding[8] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[8].Q THEN	ARbReportCsvWriteStnHolding[8] := FALSE; END_IF

// Station 8
bReportCsvWriteRE_Stn[8] (CLK:=tStn8.Q OR GeneratorComparison.ARUpdate_bIntAddress[8] OR CKKTEST[9]  , Q=> );

IF  bReportCsvWriteRE_Stn[8].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	8 , 
						sFilename				:=	sStn8tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[8] );
END_IF


sStn9tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn9tittle := CONCAT(DSStnBasketInfo[9].ARsBarcodeData[1],sStn9tittle);
sStn9tittle := CONCAT('-',sStn9tittle);
sStn9tittle := CONCAT(DSStnBasketInfo[9].ARsBarcodeData[2],sStn9tittle);
sStn9tittle := CONCAT('-',sStn9tittle);
sStn9tittle := CONCAT(DSStnBasketInfo[9].ARsBarcodeData[3],sStn9tittle);
sStn9tittle := CONCAT('-',sStn9tittle);
sStn9tittle := CONCAT(DSStnBasketInfo[9].sReservedInt,sStn9tittle);

ARtReportCsvWriteStnHolding[9](IN:=ARbReportCsvWriteStnHolding[9] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[9].Q 		THEN 	ARbReportCsvWriteStnHolding[9] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[9].Q THEN	ARbReportCsvWriteStnHolding[9] := FALSE; END_IF

// Station 9
bReportCsvWriteRE_Stn[9] (CLK:=tStn9.Q OR CKKTEST[10]  , Q=> );

IF bReportCsvWriteRE_Stn[9].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	9 , 
						sFilename				:=	sStn9tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[9] );
END_IF


sStn10tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn10tittle := CONCAT(DSStnBasketInfo[10].ARsBarcodeData[1],sStn10tittle);
sStn10tittle := CONCAT('-',sStn10tittle);
sStn10tittle := CONCAT(DSStnBasketInfo[10].ARsBarcodeData[2],sStn10tittle);
sStn10tittle := CONCAT('-',sStn10tittle);
sStn10tittle := CONCAT(DSStnBasketInfo[10].ARsBarcodeData[3],sStn10tittle);
sStn10tittle := CONCAT('-',sStn10tittle);
sStn10tittle := CONCAT(DSStnBasketInfo[10].sReservedInt,sStn10tittle);

ARtReportCsvWriteStnHolding[10](IN:=ARbReportCsvWriteStnHolding[10] , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Stn[10].Q 		THEN 	ARbReportCsvWriteStnHolding[10] := TRUE; END_IF
IF ARtReportCsvWriteStnHolding[10].Q THEN	ARbReportCsvWriteStnHolding[10] := FALSE; END_IF

// Station 10
bReportCsvWriteRE_Stn[10] (CLK:=tStn10.Q OR CKKTEST[11]  , Q=> );

IF bReportCsvWriteRE_Stn[10].Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	10 , 
						sFilename				:=	sStn10tittle, 
						eCsvActionType			:=	eCsvLogData_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvStn[10] );
END_IF

// Station 11
//bReportCsvWriteRE_Stn[11] (CLK:=tReportCsvEn_Stn[11].Q OR CKKTEST[12]  , Q=> );
//IF (*dsMcCarrierInfo.ARStn[5].bAvailability AND*) bReportCsvWriteRE_Stn[11].Q THEN
//	FNbCsvWriteToBuffer(
//						iStationId				:=	11 , 
//						sFilename				:=	dsMcCarrierInfo.ARStn[11].sFileName, 
//						eCsvActionType			:=	eCsvLogData_CarrierReport , 
//						udiCsvMRBCount			=> 	udiCsvMRBCount, 
//						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
//						bError					=>	bErrorCsvStn[12] );
//END_IF

// Station 12
//bReportCsvWriteRE_Stn[12] (CLK:=tReportCsvEn_Stn[12].Q OR CKKTEST[13]  , Q=> );
//IF (*dsMcCarrierInfo.ARStn[5].bAvailability AND*) bReportCsvWriteRE_Stn[12].Q THEN
//	FNbCsvWriteToBuffer(
//						iStationId				:=	12 , 
//						sFilename				:=	dsMcCarrierInfo.ARStn[12].sFileName, 
//						eCsvActionType			:=	eCsvLogData_CarrierReport , 
//						udiCsvMRBCount			=> 	udiCsvMRBCount, 
//						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
//						bError					=>	bErrorCsvStn[12] );
//END_IF


sStn13tittle := CONCAT('_',DSLocalSystemTimeML.sCurrentDate_General);
sStn13tittle := CONCAT(AR2sDSCv_UldConfirmBasketInfo[1,1].ARsBarcodeData[1],sStn13tittle);
sStn13tittle := CONCAT('-',sStn13tittle);
sStn13tittle := CONCAT(AR2sDSCv_UldConfirmBasketInfo[1,1].ARsBarcodeData[2],sStn13tittle);
sStn13tittle := CONCAT('-',sStn13tittle);
sStn13tittle := CONCAT(AR2sDSCv_UldConfirmBasketInfo[1,1].ARsBarcodeData[3],sStn13tittle);
sStn13tittle := CONCAT('-',sStn13tittle);
sStn13tittle := CONCAT(AR2sDSCv_UldConfirmBasketInfo[1,1].sReservedInt,sStn13tittle);

tReportCsvWriteUldHolding(IN:=bReportCsvWriteUldHolding , PT:=T#3S , Q=> , ET=> );
IF bReportCsvWriteRE_Uld.Q THEN bReportCsvWriteUldHolding := TRUE; END_IF
IF tReportCsvWriteUldHolding.Q THEN	bReportCsvWriteUldHolding := FALSE; END_IF

// Unloading
bReportCsvWriteRE_Uld(CLK:=tStn13.Q OR AR2sDSCv_UldConfirmBasketInfo[1,1].bAvailibility OR CKKTEST[13]  , Q=> );

IF   bReportCsvWriteRE_Uld.Q THEN
	FNbCsvWriteToBuffer(
						iStationId				:=	81 , 
						sFilename				:=	sStn13tittle , 
						eCsvActionType			:=	eCsvGenerate_CarrierReport , 
						udiCsvMRBCount			=> 	udiCsvMRBCount, 
						udiCsvMRBUsagePercent	=>	udiCsvMRBUsagePercent , 
						bError					=>	bErrorCsvUld );
END_IF

	
fbCsvHandler(
			bEn								:=	TRUE	 , 			
			bReset							:=	bReset	 , 			
			bShutdownRequestFlag			:=	bCsvShutdownRequestFlag	 , 			
			bIdle							=>	bIdleFlag	 , 			
			bProgress						=>	bProgressFlag	 , 			
			bReadyToShutdownFlag			=>	bCsvReadyToShutdownFlag	 , 			
			bError							=>	bErrorFlag	 , 			
			bErrorCaseId					=>	iErrorCaseId	 , 			
			bClearErrorLog					:=	bClearErrorLog	 , 			
			udiCsvMRBCount					:=	udiCsvMRBCount	 , 			
			udiCsvMRBUsagePercent			:=	udiCsvMRBUsagePercent	 );	]]></ST>
    </Implementation>
    <LineIds Name="Csv_Report_Ctrl">
      <LineId Id="180" Count="5" />
      <LineId Id="187" Count="0" />
      <LineId Id="617" Count="14" />
      <LineId Id="1348" Count="1" />
      <LineId Id="1347" Count="0" />
      <LineId Id="1352" Count="0" />
      <LineId Id="1355" Count="3" />
      <LineId Id="1354" Count="0" />
      <LineId Id="1091" Count="0" />
      <LineId Id="1087" Count="0" />
      <LineId Id="632" Count="1" />
      <LineId Id="1101" Count="0" />
      <LineId Id="634" Count="4" />
      <LineId Id="1444" Count="2" />
      <LineId Id="1436" Count="0" />
      <LineId Id="1438" Count="0" />
      <LineId Id="641" Count="1" />
      <LineId Id="1265" Count="0" />
      <LineId Id="1267" Count="0" />
      <LineId Id="644" Count="7" />
      <LineId Id="1488" Count="0" />
      <LineId Id="1103" Count="7" />
      <LineId Id="652" Count="0" />
      <LineId Id="1448" Count="2" />
      <LineId Id="660" Count="0" />
      <LineId Id="1451" Count="0" />
      <LineId Id="661" Count="1" />
      <LineId Id="1346" Count="0" />
      <LineId Id="664" Count="8" />
      <LineId Id="1112" Count="0" />
      <LineId Id="673" Count="0" />
      <LineId Id="1174" Count="1" />
      <LineId Id="1165" Count="5" />
      <LineId Id="1455" Count="0" />
      <LineId Id="1453" Count="1" />
      <LineId Id="1172" Count="1" />
      <LineId Id="681" Count="1" />
      <LineId Id="684" Count="9" />
      <LineId Id="1489" Count="0" />
      <LineId Id="694" Count="0" />
      <LineId Id="1176" Count="1" />
      <LineId Id="1157" Count="5" />
      <LineId Id="1456" Count="2" />
      <LineId Id="1164" Count="0" />
      <LineId Id="701" Count="2" />
      <LineId Id="1490" Count="0" />
      <LineId Id="706" Count="8" />
      <LineId Id="1491" Count="0" />
      <LineId Id="1148" Count="0" />
      <LineId Id="1178" Count="1" />
      <LineId Id="1149" Count="5" />
      <LineId Id="1459" Count="2" />
      <LineId Id="722" Count="0" />
      <LineId Id="1462" Count="0" />
      <LineId Id="723" Count="1" />
      <LineId Id="1271" Count="0" />
      <LineId Id="725" Count="8" />
      <LineId Id="1180" Count="0" />
      <LineId Id="734" Count="0" />
      <LineId Id="1182" Count="1" />
      <LineId Id="735" Count="5" />
      <LineId Id="1464" Count="2" />
      <LineId Id="1071" Count="0" />
      <LineId Id="741" Count="2" />
      <LineId Id="1273" Count="0" />
      <LineId Id="744" Count="8" />
      <LineId Id="1184" Count="0" />
      <LineId Id="753" Count="0" />
      <LineId Id="1186" Count="1" />
      <LineId Id="754" Count="5" />
      <LineId Id="1467" Count="2" />
      <LineId Id="760" Count="0" />
      <LineId Id="1470" Count="0" />
      <LineId Id="761" Count="1" />
      <LineId Id="1275" Count="0" />
      <LineId Id="763" Count="8" />
      <LineId Id="1188" Count="3" />
      <LineId Id="772" Count="0" />
      <LineId Id="774" Count="4" />
      <LineId Id="1472" Count="2" />
      <LineId Id="1471" Count="0" />
      <LineId Id="779" Count="2" />
      <LineId Id="1278" Count="0" />
      <LineId Id="782" Count="8" />
      <LineId Id="1492" Count="0" />
      <LineId Id="791" Count="0" />
      <LineId Id="1192" Count="1" />
      <LineId Id="792" Count="5" />
      <LineId Id="1477" Count="0" />
      <LineId Id="1475" Count="1" />
      <LineId Id="1077" Count="0" />
      <LineId Id="798" Count="2" />
      <LineId Id="1360" Count="0" />
      <LineId Id="801" Count="8" />
      <LineId Id="1493" Count="0" />
      <LineId Id="1194" Count="2" />
      <LineId Id="810" Count="0" />
      <LineId Id="812" Count="4" />
      <LineId Id="1079" Count="0" />
      <LineId Id="1478" Count="1" />
      <LineId Id="817" Count="3" />
      <LineId Id="1494" Count="0" />
      <LineId Id="821" Count="10" />
      <LineId Id="1197" Count="1" />
      <LineId Id="832" Count="5" />
      <LineId Id="1482" Count="0" />
      <LineId Id="1480" Count="1" />
      <LineId Id="1081" Count="0" />
      <LineId Id="838" Count="2" />
      <LineId Id="1495" Count="0" />
      <LineId Id="841" Count="34" />
      <LineId Id="1199" Count="1" />
      <LineId Id="876" Count="3" />
      <LineId Id="1059" Count="0" />
      <LineId Id="1058" Count="0" />
      <LineId Id="1484" Count="2" />
      <LineId Id="1083" Count="0" />
      <LineId Id="880" Count="2" />
      <LineId Id="1496" Count="0" />
      <LineId Id="883" Count="21" />
      <LineId Id="105" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>